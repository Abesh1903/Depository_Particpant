@model Proj_Depository.Models.DepositoryModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport"
          content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <title>Depository Participant List</title>
    @*<link rel="stylesheet"
        href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round" />*@
    @*<link rel="stylesheet"
        href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" />*@
    @*<link rel="stylesheet"
        href="https://fonts.googleapis.com/icon?family=Material+Icons" />*@
    @*<link rel="stylesheet"
        href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />*@
    @*<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>*@
    @*<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>*@
    @*<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>*@

    <link href="~/Content/style_googleapi.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/style_material.css" rel="stylesheet" />
    <link href="E:\Internship\Programs\Project - Depository\Style & Script\style_font_awesome.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="E:\Internship\Programs\Project - Depository\Style & Script\popper.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>

    <link href="~/Content/style1.css" rel="stylesheet"/>
    <script src="~/Scripts/"></script>

    @*<script>
            $(document).ready(function () {
                // Activate tooltips
                $('[data-toggle="tooltip"]').tooltip();

                // Filter table rows based on searched term

            });
        </script>*@
    <style>
        body {
            margin: 0;
            padding: 0;
            /*display: flex;*/
            justify-content: center;
            align-items: center;
            height: 100vh;
            font-family: Arial, sans-serif;
        }
        .wrap-text {
            word-wrap: break-word;
            max-width: 200px;
            /*text-align: center;*/
        }

        #snackbar {
            /*visibility: hidden;
            min-width: 250px;
            min-height: 50px;
            margin-left: -125px;
            background-color: red;
            color: white;
            text-align: center;
            vertical-align: middle;
            border-radius: 2px;
            padding: 16px;
            position: fixed;
            z-index: 1;
            left: 50%;
            bottom: 350px;
            font-size: 20px;*/
            visibility: hidden;
            min-width: 250px;
            min-height: 50px;
            background-color: red;
            color: white;
            text-align: center;
            vertical-align: middle;
            border-radius: 2px;
            padding: 16px;
            position: fixed;
            top: 50%; 
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 20px;
        }

            #snackbar.show {
                visibility: visible;
            }

        #delsnackbar {
            visibility: hidden;
            min-width: 250px;
            min-height: 50px;
            background-color: black;
            color: white;
            text-align: center;
            vertical-align: middle;
            border-radius: 2px;
            padding: 16px;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 20px;
        }

            #delsnackbar.show {
                visibility: visible;
            }

        #downloadsnackbar {
            visibility: hidden;
            min-width: 250px;
            min-height: 50px;
            background-color: yellow;
            color: black;
            text-align: center;
            vertical-align: middle;
            border-radius: 2px;
            padding: 16px;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 20px;
        }

            #downloadsnackbar.show {
                visibility: visible;
            }
    </style>

</head>
<body>
    <div class="container-lg">
        <div class="table-responsive">
            <div class="table-wrapper">
                <div class="table-title">
                    <div class="row" style="flex-wrap: nowrap; margin: 0;">
                        <div class="col-sm-5">
                            <h2><b>Depository Participant List</b></h2>
                        </div>
                        <div class="col-sm-6" style="display: flex;">
                            <div class="col-sm-3" style="width: 54.33%;">
                                @using (Html.BeginForm("List_Depository", "Depository", new { search_name = Model.search_name }, FormMethod.Get))
                                {
                                    <div class="search-box">
                                        <div class="input-group">
                                            @Html.TextBoxFor(m => m.search_name, new { id = "Searchtext", placeholder = "Search by DP Name", style = "width : 300px; color: ;" })
                                            <button class="input-group-addon">
                                                <i class="material-icons">&#xE8B6;</i>
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="col-sm-5" style="width: 22.67%;">
                                @using (Html.BeginForm("List_Depository", "Depository", FormMethod.Get))
                                {
                                    <div class="input-group" style="width: 170%;">
                                        <button class="input-group-addon btn btn2">
                                            <i class="material-icons">&#xe5d5;</i>
                                            <span>Clear</span>
                                        </button>
                                    </div>
                                }
                            </div>

                            <div class="col-sm-5" style="width: 16.67%;">
                                @using (Html.BeginForm("Add_Depository", "Depository", FormMethod.Get))
                                {
                                    <div class="input-group" style="width: 170%;">
                                        <button class="input-group-addon btn">
                                            <i class="material-icons">&#xe147;</i>
                                            <span>Add</span>
                                        </button>
                                    </div>
                                }
                            </div>

                            <div class="col-sm-3">
                                @using (Html.BeginForm("List_Download", "Depository", FormMethod.Get)) 
                                { 
                                    <div class="input-group" style="width: 100%;">
                                        <button class="input-group-addon btn btn1">
                                            <i class="material-icons">&#xE2C4;</i>
                                            <span>Download</span>
                                        </button>
                                    </div>
                                }
                            </div>
                            @*<div id="downloadsnackbar"">File Downloaded Successfully</div>*@
                        </div>

                    </div>

                </div>



                <table class="table table-striped">


                    @if (Model.Count == 0)
                    {
                        <tbody>
                            <tr><th style="text-align: center; width: 100%; --bs-table-bg-type: white; border-style: none; font-size: 18px;">No Record Found.</th> </tr>
                        </tbody>

                    }
                    else
                    {
                        <thead>
                            <tr style="text-align: left;">

                                <th width="7%">Depository</th>
                                <th width="10%">DP Id</th>
                                <th width="18%">DP Name</th>
                                <th width="18%">Address</th>
                                <th width="13%">City</th>
                                <th width="14%">State</th>
                                <th width="7%">Pin Code</th>
                                @*<th width="10%">Telephone</th>*@
                                <th width="7%">Status</th>
                                <th width="5%">Actions</th>
                            </tr>

                        </thead>
                        <tbody>

                            @foreach (var item in Model.DepositoryList)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.depo_desc)</td>
                                    <td>@Html.DisplayFor(modelItem => item.dp_id)</td>
                                    <td class="wrap-text">@Html.DisplayFor(modelItem => item.dp_name)</td>
                                    <td class="wrap-text">@Html.DisplayFor(modelItem => item.dp_addr1)</td>
                                    <td class="wrap-text">@Html.DisplayFor(modelItem => item.dp_city)</td>
                                    <td class="wrap-text">@Html.DisplayFor(modelItem => item.dp_state)</td>
                                    <td>@Html.DisplayFor(modelItem => item.dp_pincode)</td>
                                    @*<td class="wrap-text">@Html.DisplayFor(modelItem => item.dp_tele_no)</td>*@

                                    <td>@Html.DisplayFor(modelItem => item.active_status)</td>
                                    <td>
                                        <a href="~/Depository/Update_Depository?dp_id=@item.dp_id" class="edit" title="Edit" data-toggle="tooltip"><i class="material-icons">&#xE254;</i></a>
                                        <a href="~/Depository/Delete_Depository?dp_id=@item.dp_id"
                                           onclick="return confirm('Are you sure to delete ?\nSelect OK to delete\nSelect Cancel to return to the page')"
                                           class="delete"
                                           title="Delete"
                                           data-toggle="tooltip"><i class="material-icons">&#xE872;</i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    }


                </table>
                <div id="snackbar">@TempData["RetMsg"]</div>
                <div id="delsnackbar">@TempData["RetMsg"]</div>
                @*<div id="downloadsnackbar">Download Successful</div>*@
            </div>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery   /3.1.1/jquery.min.js"></script>
    <script src="script.js"></script>
    <script>
        function errorMsgFunction() {
            var x = document.getElementById("snackbar");
            x.className = "show";
            setTimeout(function () { x.className = x.className.replace("show", ""); }, 5000);
        }

        function deleteMsgFunction() {
            var x = document.getElementById("delsnackbar");
            x.className = "show";
            setTimeout(function () { x.className = x.className.replace("show", ""); }, 5000);
        }

        //function downloadMsgFunction() {
        //    var x = document.getElementById("downloadsnackbar");
        //    x.className = "show";
        //    setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);
        //}


        $("document").ready(function ()
        {
            var RetCode = 0;

            RetCode = @TempData["RetCode"];
            if (RetCode == 0) {
                errorMsgFunction();
            }
            else if (RetCode == 1) {
                deleteMsgFunction();
            }
        });
    </script>
</body>

</html>
